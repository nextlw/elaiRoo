import path from "path"
import fs from "fs"

import { zodToTs, createTypeAlias, printNode } from "zod-to-ts"
import { $ } from "execa"

import schemas from "../schemas"

const { typeDefinitions } = schemas

async function main() {
	const types: string[] = [
		"// This file is automatically generated by running `pnpm --filter roo-cline generate-types`\n// Do not edit it directly.",
	]

	for (const { schema, identifier } of typeDefinitions) {
		types.push(printNode(createTypeAlias(zodToTs(schema, identifier).node, identifier)))
		types.push(`export type { ${identifier} }`)
	}

	fs.writeFileSync(
		path.join(path.dirname(new URL(import.meta.url).pathname), "..", "exports", "types.ts"),
		types.join("\n\n"),
	)

	await $`npx tsup ${path.join(path.dirname(new URL(import.meta.url).pathname), "..", "exports", "interface.ts")} --dts -d ${path.join(path.dirname(new URL(import.meta.url).pathname), "..", "..", "out")}`
	fs.copyFileSync(
		path.join(path.dirname(new URL(import.meta.url).pathname), "..", "..", "out", "interface.d.ts"),
		path.join(path.dirname(new URL(import.meta.url).pathname), "..", "exports", "roo-code.d.ts"),
	)

	await $`npx prettier --write ${path.join(path.dirname(new URL(import.meta.url).pathname), "..", "exports", "types.ts")} ${path.join(path.dirname(new URL(import.meta.url).pathname), "..", "exports", "roo-code.d.ts")}`

	if (
		fs.existsSync(
			path.join(path.dirname(new URL(import.meta.url).pathname), "..", "..", "..", "Roo-Code-Types", "src"),
		)
	) {
		fs.copyFileSync(
			path.join(path.dirname(new URL(import.meta.url).pathname), "..", "..", "out", "interface.js"),
			path.join(
				path.dirname(new URL(import.meta.url).pathname),
				"..",
				"..",
				"..",
				"Roo-Code-Types",
				"src",
				"index.js",
			),
		)
		fs.copyFileSync(
			path.join(path.dirname(new URL(import.meta.url).pathname), "..", "..", "out", "interface.d.ts"),
			path.join(
				path.dirname(new URL(import.meta.url).pathname),
				"..",
				"..",
				"..",
				"Roo-Code-Types",
				"src",
				"index.d.ts",
			),
		)
	}
}

main()
